// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using work_01.Model;

#nullable disable

namespace work_01.Migrations
{
    [DbContext(typeof(AsigmentContext))]
    partial class AsigmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("work_01.Model.Allergie", b =>
                {
                    b.Property<int>("AllergiesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AllergiesID"));

                    b.Property<string>("AllergiesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AllergiesID");

                    b.ToTable("Allergies");

                    b.HasData(
                        new
                        {
                            AllergiesID = 1,
                            AllergiesName = "Drugs - Penicillin"
                        },
                        new
                        {
                            AllergiesID = 2,
                            AllergiesName = "Drugs - Others"
                        },
                        new
                        {
                            AllergiesID = 3,
                            AllergiesName = "Animals"
                        },
                        new
                        {
                            AllergiesID = 4,
                            AllergiesName = "Food"
                        },
                        new
                        {
                            AllergiesID = 5,
                            AllergiesName = "Ointments"
                        },
                        new
                        {
                            AllergiesID = 6,
                            AllergiesName = "Plant"
                        },
                        new
                        {
                            AllergiesID = 7,
                            AllergiesName = "Sprays"
                        },
                        new
                        {
                            AllergiesID = 8,
                            AllergiesName = "Others"
                        },
                        new
                        {
                            AllergiesID = 9,
                            AllergiesName = "No Allergies"
                        });
                });

            modelBuilder.Entity("work_01.Model.Allergies_Detail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AllergiesID")
                        .HasColumnType("int");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AllergiesID");

                    b.HasIndex("PatientID");

                    b.ToTable("AllergiesDetails");
                });

            modelBuilder.Entity("work_01.Model.DiseaseInformation", b =>
                {
                    b.Property<int>("DiseaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiseaseID"));

                    b.Property<string>("DiseaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiseaseID");

                    b.ToTable("DiseaseInformations");

                    b.HasData(
                        new
                        {
                            DiseaseID = 1,
                            DiseaseName = "Diabetes"
                        },
                        new
                        {
                            DiseaseID = 2,
                            DiseaseName = "Hypertension"
                        },
                        new
                        {
                            DiseaseID = 3,
                            DiseaseName = "Arthritis"
                        },
                        new
                        {
                            DiseaseID = 4,
                            DiseaseName = "Heart Disease"
                        },
                        new
                        {
                            DiseaseID = 5,
                            DiseaseName = "Respiratory Infections"
                        });
                });

            modelBuilder.Entity("work_01.Model.NCD", b =>
                {
                    b.Property<int>("NCDID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NCDID"));

                    b.Property<string>("NCDName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NCDID");

                    b.ToTable("NCDs");

                    b.HasData(
                        new
                        {
                            NCDID = 1,
                            NCDName = "Asthma"
                        },
                        new
                        {
                            NCDID = 2,
                            NCDName = "Cancer"
                        },
                        new
                        {
                            NCDID = 3,
                            NCDName = "Disorders of ear"
                        },
                        new
                        {
                            NCDID = 4,
                            NCDName = "Disorder of eye"
                        },
                        new
                        {
                            NCDID = 5,
                            NCDName = "Mental illness"
                        });
                });

            modelBuilder.Entity("work_01.Model.NCD_Detail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("NCDID")
                        .HasColumnType("int");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NCDID");

                    b.HasIndex("PatientID");

                    b.ToTable("NCDDetails");
                });

            modelBuilder.Entity("work_01.Model.Patient", b =>
                {
                    b.Property<int>("PatientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientID"));

                    b.Property<int>("DiseaseID")
                        .HasColumnType("int");

                    b.Property<int>("Epilepsy")
                        .HasColumnType("int");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID");

                    b.HasIndex("DiseaseID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("work_01.Model.Allergies_Detail", b =>
                {
                    b.HasOne("work_01.Model.Allergie", "Allergie")
                        .WithMany()
                        .HasForeignKey("AllergiesID");

                    b.HasOne("work_01.Model.Patient", "Patient")
                        .WithMany("AllergiesDetails")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergie");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("work_01.Model.NCD_Detail", b =>
                {
                    b.HasOne("work_01.Model.NCD", "NCD")
                        .WithMany()
                        .HasForeignKey("NCDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("work_01.Model.Patient", "Patient")
                        .WithMany("NCDDetails")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NCD");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("work_01.Model.Patient", b =>
                {
                    b.HasOne("work_01.Model.DiseaseInformation", "DiseaseInformation")
                        .WithMany("Patients")
                        .HasForeignKey("DiseaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiseaseInformation");
                });

            modelBuilder.Entity("work_01.Model.DiseaseInformation", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("work_01.Model.Patient", b =>
                {
                    b.Navigation("AllergiesDetails");

                    b.Navigation("NCDDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
